Памятка по командам для работы с git через bash-консоль и gihub.

Создание репозитория для нового проекта.

1. Создаём репозиторий через github веб-интефейс, но не инициализируем его, как он предлагает.

2. Создаём локальную папку с таким же именем как название удалённого репозитория. Важно чтобы имена
папок и файлов проекта, а так же наименование репозитория не содержало символов кириллицы и пробелов,
если в названии папки или файла необходим пробел, то нужно использовать символ подчёркивания - "_".

3. Копируем в локальную папку файлы: .gitattributes и .gitignore, а так же файлы и папки проекта.

4. Открываем bash-консоль ubuntu и если это необходимо вводим пароль.

5. Необходимо в консоли перейти в папку проекта. Так как проекты расположены на дисках ОС Окна, а диски
у опрационной системы Окна обозначаются как c, d, e, и т.д., при этом WSL-ubuntu видит диски Окон как
папки смонтированные в каталог /mnt, то есть диски c, d, e будут видны как подкаталоги каталога /mnt.
Например путь к диску с:\ - как принято в Окнах, будет соответствовать пути /mnt/c - для WSL-ubuntu.

а) Команда cd предназначена для смены текущего каталога.

б) Команда cd .. сменит текущий каталог на один уровень вложения ближе к корневому каталогу, то есть
выше.

в) Чтобы перейти в каталог проекта нужно команде cd передать соответствующий путь. 
Например если проект находится на диске d:\My_projects\My_project, то можно сразу выполнить команду
cd /mnt/d/My_projects/My_project или последоовательно выполнить cd /mnt, cd /d, cd /My_projects,
cd /My_project.

г) В обоих случаях при успешном выполнении, приглашение командной строки должно принять следующий вид:
anya@3D: /mnt/d/My_projects/My_project$

6. После того как текуший каталог сменился на корневой каталог нового проекта, нужно инициализировать
git - систему контроля версий для данного каталога при помощи команды git init.

7. После успешной инициализации в папке проекта появится подкаталог .git - удаление данного подкаталога
из каталога проекта отменит инициализацию.

8. Теперь необходимо связать получившийся локальный репозиторий git с удалённым github репозиторием,
для этого нужно:
 
a) Cкопировать ssh-ссылку, которая должна быть опубликована в не инициализированном удалённом 
репозитории github. Она должна иметь следующий вид: git@github.com:Ann3dviz/My_project.git

б) Выполнить команду - git remote add origin git@github.com:Ann3dviz/My_project.git

! Теперь локальный репозиторий git проинициализирован и связан с удалённым репозиторием github!
! Однако информация изменений проекта не зафиксированна! 

Для фиксации изменений служит команда git commit. Чтобы её применить нужно добавить изменённые файлы
в индекс. Чтобы увидеть какие файла изменены нужно выполнить команду - git status.

1. Чтобы посмотреть изменёные файлы проекта нужно выполнить команду - git st. Изменённые файлы будут
отображены красным шрифтом.

2. Можно добавить только некоторые файлы к будущему коммиту с помощью выполнения команды:
git add file_name - где file_name это имя изменённого файла. Обычно после команды git st двойной клик
мышью выделяет имя и путь файла, Ctrl+Shift+c - копирует имя и путь в буфер обмена. Затем пишем команду
и нажимаем Ctrl+Shift+v и команда готова. После добавления некоторых файлов в индекс к будущему коммиту,
повторная команда git st покажет добавленные в индекс файлы зелёным цветом шрифта.

3. Если нужно добавить все файлы в индекс к будущему коммиту, то нужно выполнить команду: 
git add -A

4. Фиксируем изменения файлов проекта при помощи команды: 
git commit -m "Здесь комментарий описывающий данную фиксацию т.е. какие изменения были сделаны."

5. После выполнения фиксации изменений, команда: git hist - покажет все фиксации, которые были
сделаны когда-либо для этого проекта включая последнюю фиксацию, а команда git st уже не отобразит
зафиксированные файлы зелёным цветом шрифта.

6. После фиксации изменений в локальном репозитории необходимо отправить изменения в удалённый 
репозиторий, для этого необходимо выполнить команду git push origin master
