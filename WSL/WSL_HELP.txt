Деинсталляция WSL.
PowerShel(WINDOWS+R): Remove-WindowsFeature Microsoft-Windows-Subsystem-Linux

Инсталляция WSL. Команда работает, только если WSL не установлена.
PowerShel{WINDOWS+R}: wsl --install

Инсталлировать конкретный дистрибутивов.
PowerShel{WINDOWS+R}: wsl --install -d <DistroName>
Например: wsl --install -d Ubuntu-20.04
Настройка имени пользователя и пароля.

Просмотреть список доступных дистрибутивов.
PowerShel{WINDOWS+R}: wsl --list --online
или
PowerShel{WINDOWS+R}:wsl -l -o

Получить список установленных дистрибутивов.
PowerShel{WINDOWS+R}: wsl -l -v
Bash: wsl.exe -l -v

Задать значение WSL 1 или WSL 2 для запуска версии распределения по умолчанию <Version#> = 1 или 2.
PowerShel{WINDOWS+R}: wsl --set-default-version <Version#>

Перейти с версии WSL 2 на WSL 1 или обновить ранее установленные дистрибутивы Linux с версии WSL 1 до WSL 2.
PowerShel{WINDOWS+R}: wsl --set-version <distro name> 2


***Первое после установки - обновление***

Обновление и модификация пакетов.
Bash: sudo apt update && sudo apt upgrade

Версия ядра.
Bash: lsb_release -a

Установка локали (если не установлена).
Bash: sudo apt-get install locales

Выбор доступных системе локалей.
Bash: sudo dpkg-reconfigure locales
en_US.UTF-8
ru_RU.UTF-8

Настройка русской локали.
Bash: sudo update-locale LANG=ru_RU.UTF-8
Перезагрузить консоль.

Проверка локали.
Bash: locale

***Установка git***

Установка git.
Bash: sudo apt-get install git

Обновление git до последней версии.
Bash: sudo add-apt-repository ppa:git-core/ppa
Bash: sudo apt update
Bash: sudo apt install git

Настройка файла конфигурации Git.
Bash: git config --global user.name "User Name"
Bash: git config --global user.email "youremail@domain.com"

Настройка диспетчера учетных данных Git.

Если установлен >GIT = версия 2.36.1
git config --global credential.helper "/mnt/c/Program\ Files/Git/mingw64/bin/git-credential-manager-core.exe"

если версия версии < 2.36.1
git config --global credential.helper "/mnt/c/Program\ Files/Git/mingw64/libexec/git-core/git-credential-manager-core.exe"

Добавить в home/user/.gitconfig строки.
[alias]
    st = status
	hist = log --graph --date-order --pretty=format:\"%C(bold blue) %h %C(bold cyan) %ad %C(bold green)%ce %Cgreen%d%Creset %s\" --all --date=short
	br = branch
	cmt = commit
	ckt = checkout

Если папки локальных репозиториев созданы под другим пользователем, то добавить в home/user/.gitconfig строки.
[safe]
    directory = *

Настройка окончаний строк для WSL. Может понадобиться снова клонировать репозиторий, чтобы настройки вступили в силу.
git config --global core.autocrlf true

Генерация пары ключей, обязательно с дополнительной парольной защитой и путём поумолчанию. После генерации пару скопировать в каталог ~/.ssh
ssh-keygen -t ed25519 -C "maklakovsb@yandex.ru"

Добавить открытый ключ на гитхаб.
https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey

1) Запуск службы менеджера ключей.
eval "$(ssh-agent -s)"

2) Добавление ключа в службой менеджера ключей в хранилище.
ssh-add ~/.ssh/id_ed25519

3) Подключение к гитхаб.
ssh -T git@github.com

При получении сообщения fatal: не удалось установить «core.filemode» в «false»
необходимо перезагрузить окна.

Адрес для проверки открытых ключей гитхаб.
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/githubs-ssh-key-fingerprints

Последние три команды выполняют запуск агента, добавление закрытого ключа и соединение с гитхаб.
Для автоматизации этих действий необходимо добавить в файл ~/.profileили ~/.bashrc следующие строки:

env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    ssh-add
fi

unset env